// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizMania.Models;

namespace QuizMania.Migrations
{
    [DbContext(typeof(QuizMasterContext))]
    partial class QuizMasterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuizMania.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("QuizMania.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("QuizMania.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("QuizMania.Models.QuizQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnswerId")
                        .HasColumnName("AnswerID")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnName("QuestionID")
                        .HasColumnType("int");

                    b.Property<int?>("QuizId")
                        .HasColumnName("QuizID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizQuestionAnswer");
                });

            modelBuilder.Entity("QuizMania.Models.QuizQuestionAnswered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("QuizQuestionAnswerId")
                        .HasColumnName("QuizQuestionAnswerID")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizQuestionAnswerId");

                    b.HasIndex("UserId");

                    b.ToTable("QuizQuestionAnswered");
                });

            modelBuilder.Entity("QuizMania.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("QuizMania.Models.QuizQuestionAnswer", b =>
                {
                    b.HasOne("QuizMania.Models.Answer", "Answer")
                        .WithMany("QuizQuestionAnswer")
                        .HasForeignKey("AnswerId")
                        .HasConstraintName("FK_QuizQuestionAnswer_Answer");

                    b.HasOne("QuizMania.Models.Question", "Question")
                        .WithMany("QuizQuestionAnswer")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK_QuizQuestionAnswer_Question");

                    b.HasOne("QuizMania.Models.Quiz", "Quiz")
                        .WithMany("QuizQuestionAnswer")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK_QuizQuestionAnswer_Quiz");
                });

            modelBuilder.Entity("QuizMania.Models.QuizQuestionAnswered", b =>
                {
                    b.HasOne("QuizMania.Models.QuizQuestionAnswer", "QuizQuestionAnswer")
                        .WithMany("QuizQuestionAnswered")
                        .HasForeignKey("QuizQuestionAnswerId")
                        .HasConstraintName("FK_QuizQuestionAnswered_QuizQuestionAnswer");

                    b.HasOne("QuizMania.Models.User", "User")
                        .WithMany("QuizQuestionAnswered")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_QuizQuestionAnswered_User");
                });
#pragma warning restore 612, 618
        }
    }
}
